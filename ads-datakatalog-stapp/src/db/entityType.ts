// Generated by https://quicktype.io

export interface IEntity {
    referredEntities: { [key: string]: Entity };
    entity: Entity;
}

export interface Entity {
    typeName: TypeName;
    attributes: EntityAttributes;
    lastModifiedTS: string;
    guid: string;
    status: Status;
    createdBy: AtedBy;
    updatedBy: string;
    createTime: number;
    updateTime: number;
    version: number;
    sourceDetails: SourceDetails;
    collectionId: CollectionID;
    relationshipAttributes: EntityRelationshipAttributes;
}

export interface EntityAttributes {
    owner: null;
    userTypeId: number;
    columnEncryptionKeyDatabaseName: null;
    modifiedTime: number;
    replicatedTo: null;
    scale: number;
    isXmlDocument: string;
    isMasked: string;
    encryptionTypeDesc: null;
    xmlCollectionId: number;
    isHidden: string;
    replicatedFrom: null;
    createTime: number;
    qualifiedName: string;
    length: number;
    name: string;
    sqlDescription: null;
    precision: number;
    description?: string;
    principalId: number;
    objectType: string;
    type: string;
    data_type?: string;
    encryptionAlgorithmName: null;
    systemTypeId: number;
}

export enum CollectionID {
    The59Yqlg = '59yqlg'
}

export enum AtedBy {
    ServiceAdmin = 'ServiceAdmin'
}

export interface EntityRelationshipAttributes {
    schema: any[];
    inputToProcesses: any[];
    dbSchema: DBSchema;
    columns: DBSchema[];
    attachedSchema: any[];
    meanings: Meaning[];
    outputFromProcesses: any[];
    tabular_schema: TabularSchema | null;
}

export interface DBSchema {
    guid: string;
    typeName: TypeName;
    entityStatus: Status;
    displayText: string;
    relationshipType: RelationshipType;
    relationshipGuid: string;
    relationshipStatus: Status;
    relationshipAttributes: DBSchemaRelationshipAttributes;
}

export enum Status {
    Active = 'ACTIVE'
}

export interface DBSchemaRelationshipAttributes {
    typeName: RelationshipType;
}

export enum RelationshipType {
    AzureSQLSchemaTables = 'azure_sql_schema_tables',
    AzureSQLTableColumns = 'azure_sql_table_columns'
}

export enum TypeName {
    AzureSQLColumn = 'azure_sql_column',
    AzureSQLSchema = 'azure_sql_schema',
    AzureSQLTable = 'azure_sql_table'
}

export interface Meaning {
    guid: string;
    typeName: string;
    entityStatus: Status;
    displayText: string;
    relationshipType: string;
    relationshipGuid: string;
    relationshipStatus: Status;
    relationshipAttributes: MeaningRelationshipAttributes;
}

export interface MeaningRelationshipAttributes {
    typeName: string;
    attributes: RelationshipAttributesAttributes;
}

export interface RelationshipAttributesAttributes {
    expression: null;
    createdBy: null;
    steward: null;
    confidence: null;
    description: null;
    source: null;
    status: null;
}

export interface SourceDetails {
    ScanResourceId: string;
    ScanLastModifiedAt: string;
    ScanRuleSetResourceId: string;
    ScanRuleSetLastModifiedAt: string;
    __schemaModifiedBy: SchemaModifiedBy;
    __schemaModifiedTime: number;
}

export enum SchemaModifiedBy {
    DataScan = 'DataScan'
}

export enum DataType {
    Datetime2 = 'datetime2',
    Decimal = 'decimal',
    Int = 'int',
    Nvarchar = 'nvarchar'
}

export interface TabularSchema {
    guid: string;
    typeName: string;
    entityStatus: string;
    displayText: string;
    relationshipType: string;
    relationshipGuid: string;
    relationshipStatus: string;
    relationshipAttributes: TabularSchemaRelationshipAttributes;
}
export interface TabularSchemaRelationshipAttributes {
    typeName: string;
}
export interface Attributes {
    expression: null;
    createdBy: null;
    steward: null;
    confidence: null;
    description: null;
    source: null;
    status: null;
}
